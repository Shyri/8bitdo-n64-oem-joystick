

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 31 00:30:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x5E,2
    11  0000                     
    12                           ; Version 2.05
    13                           ; Generated 20/12/2018 GMT
    14                           ; 
    15                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC12F675 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0019                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  008C                     	;# 
    65  008E                     	;# 
    66  0090                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0096                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0019                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0096                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  001F                     _ADCON0	set	31
   111  0019                     _CMCON	set	25
   112  005B                     _GPIE	set	91
   113  005F                     _GIE	set	95
   114  002C                     _GPIO4	set	44
   115  002D                     _GPIO5	set	45
   116  0028                     _GPIO0	set	40
   117  002A                     _GPIO2	set	42
   118  0029                     _GPIO1	set	41
   119  0058                     _GPIF	set	88
   120  009F                     _ANSEL	set	159
   121  0085                     _TRISIO	set	133
   122  04B2                     _IOC2	set	1202
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  000C                     start_initialization:	
   128  000C                     __initialization:	
   129  000C                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  000C                     __end_of__initialization:	
   133  000C  0183               	clrf	3
   134  000D  28A7               	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	cstackBANK0
   137  0020                     __pcstackBANK0:	
   138  0020                     ?_isr:	
   139  0020                     ??_isr:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0020                     ?_calibrate:	
   143                           ; 1 bytes @ 0x0
   144                           
   145  0020                     ?_main:	
   146                           ; 1 bytes @ 0x0
   147                           
   148                           
   149                           ; 1 bytes @ 0x0
   150  0020                     	ds	3
   151  0023                     ??_calibrate:	
   152                           
   153                           ; 1 bytes @ 0x3
   154  0023                     	ds	2
   155  0025                     calibrate@i:	
   156                           
   157                           ; 2 bytes @ 0x5
   158  0025                     	ds	2
   159  0027                     calibrate@i_48:	
   160                           
   161                           ; 2 bytes @ 0x7
   162  0027                     	ds	2
   163  0029                     ??_main:	
   164                           
   165                           ; 1 bytes @ 0x9
   166  0029                     	ds	2
   167                           
   168                           	psect	maintext
   169  00A7                     __pmaintext:	
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 89 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : B00/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0
   189 ;;      Params:         0       0
   190 ;;      Locals:         0       0
   191 ;;      Temps:          0       2
   192 ;;      Totals:         0       2
   193 ;;Total ram usage:        2 bytes
   194 ;; Hardware stack levels required when called:    2
   195 ;; This function calls:
   196 ;;		_calibrate
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           
   203                           ;psect for function _main
   204  00A7                     _main:	
   205                           
   206                           ;main.c: 90:     TRISIO = 0b00000110;
   207                           
   208                           ;incstack = 0
   209                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   210  00A7  3006               	movlw	6
   211  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   212  00A9  0085               	movwf	5	;volatile
   213                           
   214                           ;main.c: 91:     CMCON = 0x07;
   215  00AA  3007               	movlw	7
   216  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   217  00AC  0099               	movwf	25	;volatile
   218                           
   219                           ;main.c: 92:     ANSEL = 0;
   220  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   221  00AE  019F               	clrf	31	;volatile
   222                           
   223                           ;main.c: 93:     ADCON0 = 0;
   224  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   225  00B0  019F               	clrf	31	;volatile
   226                           
   227                           ;main.c: 95:     _delay((unsigned long)((10)*(16000000/4000.0)));
   228  00B1  3034               	movlw	52
   229  00B2  00AA               	movwf	??_main+1
   230  00B3  30F1               	movlw	241
   231  00B4  00A9               	movwf	??_main
   232  00B5                     u137:	
   233  00B5  0BA9               	decfsz	??_main,f
   234  00B6  28B5               	goto	u137
   235  00B7  0BAA               	decfsz	??_main+1,f
   236  00B8  28B5               	goto	u137
   237  00B9  28BA               	nop2
   238                           
   239                           ;main.c: 96:     calibrate();
   240  00BA  200E               	fcall	_calibrate
   241                           
   242                           ;main.c: 98:     GIE = 1;
   243  00BB  178B               	bsf	11,7	;volatile
   244                           
   245                           ;main.c: 99:     GPIE = 1;
   246  00BC  158B               	bsf	11,3	;volatile
   247                           
   248                           ;main.c: 100:     IOC2 = 1;
   249  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   250  00BE  1516               	bsf	22,2	;volatile
   251  00BF                     l48:	
   252                           ;main.c: 103:     while(1) {
   253                           
   254                           
   255                           ;main.c: 105:     }
   256  00BF  28BF               	goto	l48
   257  00C0                     __end_of_main:	
   258                           
   259                           	psect	text1
   260  000E                     __ptext1:	
   261 ;; *************** function _calibrate *****************
   262 ;; Defined at:
   263 ;;		line 60 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  i               2    7[BANK0 ] int 
   268 ;;  i               2    5[BANK0 ] int 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, btemp+1
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0
   278 ;;      Params:         0       0
   279 ;;      Locals:         0       4
   280 ;;      Temps:          0       2
   281 ;;      Totals:         0       6
   282 ;;Total ram usage:        6 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; Hardware stack levels required when called:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _calibrate
   294  000E                     _calibrate:	
   295                           
   296                           ;main.c: 61:     GPIO4 = 0;
   297                           
   298                           ;incstack = 0
   299                           ; Regs used in _calibrate: [wreg+status,2+btemp+1]
   300  000E  1283               	bcf	3,5	;RP0=0, select bank0
   301  000F  1205               	bcf	5,4	;volatile
   302                           
   303                           ;main.c: 62:     _delay((unsigned long)((10)*(16000000/4000.0)));
   304  0010  3034               	movlw	52
   305  0011  00A4               	movwf	??_calibrate+1
   306  0012  30F1               	movlw	241
   307  0013  00A3               	movwf	??_calibrate
   308  0014                     u147:	
   309  0014  0BA3               	decfsz	??_calibrate,f
   310  0015  2814               	goto	u147
   311  0016  0BA4               	decfsz	??_calibrate+1,f
   312  0017  2814               	goto	u147
   313  0018  2819               	nop2
   314                           
   315                           ;main.c: 64:     GPIO4 = 1;
   316  0019  1283               	bcf	3,5	;RP0=0, select bank0
   317  001A  1605               	bsf	5,4	;volatile
   318                           
   319                           ;main.c: 65:     GPIO5 = 1;
   320  001B  1685               	bsf	5,5	;volatile
   321                           
   322                           ;main.c: 66:     GPIO0 = 0;
   323  001C  1005               	bcf	5,0	;volatile
   324                           
   325                           ;main.c: 68:     GPIO0 = 1;
   326  001D  1405               	bsf	5,0	;volatile
   327                           
   328                           ;main.c: 69:     for(int i = 0; i < 99; i++) {
   329  001E  01A5               	clrf	calibrate@i
   330  001F  01A6               	clrf	calibrate@i+1
   331  0020                     l39:	
   332                           
   333                           ;main.c: 70:         GPIO5 = 0;
   334  0020  1283               	bcf	3,5	;RP0=0, select bank0
   335  0021  1285               	bcf	5,5	;volatile
   336                           
   337                           ;main.c: 71:         GPIO4 = 0;
   338  0022  1205               	bcf	5,4	;volatile
   339                           
   340                           ;main.c: 72:         _delay((unsigned long)((1)*(16000000/4000.0)));
   341  0023  3006               	movlw	6
   342  0024  00A4               	movwf	??_calibrate+1
   343  0025  3030               	movlw	48
   344  0026  00A3               	movwf	??_calibrate
   345  0027                     u157:	
   346  0027  0BA3               	decfsz	??_calibrate,f
   347  0028  2827               	goto	u157
   348  0029  0BA4               	decfsz	??_calibrate+1,f
   349  002A  2827               	goto	u157
   350  002B  0000               	nop
   351                           
   352                           ;main.c: 73:         GPIO4 = 1;
   353  002C  1283               	bcf	3,5	;RP0=0, select bank0
   354  002D  1605               	bsf	5,4	;volatile
   355                           
   356                           ;main.c: 74:         GPIO5 = 1;
   357  002E  1685               	bsf	5,5	;volatile
   358                           
   359                           ;main.c: 75:         _delay((unsigned long)((1)*(16000000/4000.0)));
   360  002F  3006               	movlw	6
   361  0030  00A4               	movwf	??_calibrate+1
   362  0031  3030               	movlw	48
   363  0032  00A3               	movwf	??_calibrate
   364  0033                     u167:	
   365  0033  0BA3               	decfsz	??_calibrate,f
   366  0034  2833               	goto	u167
   367  0035  0BA4               	decfsz	??_calibrate+1,f
   368  0036  2833               	goto	u167
   369  0037  0000               	nop
   370                           
   371                           ;main.c: 76:     }
   372  0038  3001               	movlw	1
   373  0039  1283               	bcf	3,5	;RP0=0, select bank0
   374  003A  07A5               	addwf	calibrate@i,f
   375  003B  1803               	skipnc
   376  003C  0AA6               	incf	calibrate@i+1,f
   377  003D  3000               	movlw	0
   378  003E  07A6               	addwf	calibrate@i+1,f
   379  003F  0826               	movf	calibrate@i+1,w
   380  0040  3A80               	xorlw	128
   381  0041  00DF               	movwf	95
   382  0042  3080               	movlw	128
   383  0043  025F               	subwf	95,w
   384  0044  1D03               	skipz
   385  0045  2848               	goto	u75
   386  0046  3063               	movlw	99
   387  0047  0225               	subwf	calibrate@i,w
   388  0048                     u75:	
   389  0048  1C03               	skipc
   390  0049  2820               	goto	l39
   391                           
   392                           ;main.c: 78:     GPIO0 = 0;
   393  004A  1283               	bcf	3,5	;RP0=0, select bank0
   394  004B  1005               	bcf	5,0	;volatile
   395                           
   396                           ;main.c: 79:     for(int i = 0; i < 49; i++) {
   397  004C  01A7               	clrf	calibrate@i_48
   398  004D  01A8               	clrf	calibrate@i_48+1
   399  004E                     l41:	
   400                           
   401                           ;main.c: 80:         GPIO5 = 0;
   402  004E  1283               	bcf	3,5	;RP0=0, select bank0
   403  004F  1285               	bcf	5,5	;volatile
   404                           
   405                           ;main.c: 81:         GPIO4 = 0;
   406  0050  1205               	bcf	5,4	;volatile
   407                           
   408                           ;main.c: 82:         _delay((unsigned long)((1)*(16000000/4000.0)));
   409  0051  3006               	movlw	6
   410  0052  00A4               	movwf	??_calibrate+1
   411  0053  3030               	movlw	48
   412  0054  00A3               	movwf	??_calibrate
   413  0055                     u177:	
   414  0055  0BA3               	decfsz	??_calibrate,f
   415  0056  2855               	goto	u177
   416  0057  0BA4               	decfsz	??_calibrate+1,f
   417  0058  2855               	goto	u177
   418  0059  0000               	nop
   419                           
   420                           ;main.c: 83:         GPIO4 = 1;
   421  005A  1283               	bcf	3,5	;RP0=0, select bank0
   422  005B  1605               	bsf	5,4	;volatile
   423                           
   424                           ;main.c: 84:         GPIO5 = 1;
   425  005C  1685               	bsf	5,5	;volatile
   426                           
   427                           ;main.c: 85:         _delay((unsigned long)((1)*(16000000/4000.0)));
   428  005D  3006               	movlw	6
   429  005E  00A4               	movwf	??_calibrate+1
   430  005F  3030               	movlw	48
   431  0060  00A3               	movwf	??_calibrate
   432  0061                     u187:	
   433  0061  0BA3               	decfsz	??_calibrate,f
   434  0062  2861               	goto	u187
   435  0063  0BA4               	decfsz	??_calibrate+1,f
   436  0064  2861               	goto	u187
   437  0065  0000               	nop
   438                           
   439                           ;main.c: 86:     }
   440  0066  3001               	movlw	1
   441  0067  1283               	bcf	3,5	;RP0=0, select bank0
   442  0068  07A7               	addwf	calibrate@i_48,f
   443  0069  1803               	skipnc
   444  006A  0AA8               	incf	calibrate@i_48+1,f
   445  006B  3000               	movlw	0
   446  006C  07A8               	addwf	calibrate@i_48+1,f
   447  006D  0828               	movf	calibrate@i_48+1,w
   448  006E  3A80               	xorlw	128
   449  006F  00DF               	movwf	95
   450  0070  3080               	movlw	128
   451  0071  025F               	subwf	95,w
   452  0072  1D03               	skipz
   453  0073  2876               	goto	u85
   454  0074  3031               	movlw	49
   455  0075  0227               	subwf	calibrate@i_48,w
   456  0076                     u85:	
   457  0076  1803               	btfsc	3,0
   458  0077  0008               	return
   459  0078  284E               	goto	l41
   460  0079                     __end_of_calibrate:	
   461                           
   462                           	psect	text2
   463  0079                     __ptext2:	
   464 ;; *************** function _isr *****************
   465 ;; Defined at:
   466 ;;		line 36 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0
   480 ;;      Params:         0       0
   481 ;;      Locals:         0       0
   482 ;;      Temps:          0       3
   483 ;;      Totals:         0       3
   484 ;;Total ram usage:        3 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		Interrupt level 1
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _isr
   495  0079                     _isr:	
   496                           
   497                           ;main.c: 37:     if(GPIF == 1) {
   498  0079  1C0B               	btfss	11,0	;volatile
   499  007A  289F               	goto	L1
   500                           
   501                           ;main.c: 38:         if(GPIO1 == GPIO2) {
   502  007B  1D05               	btfss	5,2	;volatile
   503  007C  287F               	goto	u10_20
   504  007D  3001               	movlw	1
   505  007E  2880               	goto	u10_22
   506  007F                     u10_20:	
   507  007F  3000               	movlw	0
   508  0080                     u10_22:	
   509  0080  00A0               	movwf	??_isr
   510  0081  1C85               	btfss	5,1	;volatile
   511  0082  2885               	goto	u11_20
   512  0083  3001               	movlw	1
   513  0084  2886               	goto	u11_22
   514  0085                     u11_20:	
   515  0085  3000               	movlw	0
   516  0086                     u11_22:	
   517  0086  0620               	xorwf	??_isr,w
   518  0087  1D03               	skipz
   519  0088  2894               	goto	i1l34
   520                           
   521                           ;main.c: 39:             GPIO0 = 0;
   522  0089  1005               	bcf	5,0	;volatile
   523                           
   524                           ;main.c: 40:             GPIO5 = 0;
   525  008A  1285               	bcf	5,5	;volatile
   526                           
   527                           ;main.c: 41:             GPIO4 = 0;
   528  008B  1205               	bcf	5,4	;volatile
   529                           
   530                           ;main.c: 42:             _delay((unsigned long)((1)*(16000000/4000000.0)));
   531  008C  288D               	nop2	;2 cycle nop
   532  008D  288E               	nop2	;2 cycle nop
   533                           
   534                           ;main.c: 43:             GPIO4 = 1;
   535  008E  1283               	bcf	3,5	;RP0=0, select bank0
   536  008F  1605               	bsf	5,4	;volatile
   537                           
   538                           ;main.c: 44:             GPIO5 = 1;
   539  0090  1685               	bsf	5,5	;volatile
   540                           
   541                           ;main.c: 45:             _delay((unsigned long)((1)*(16000000/4000000.0)));
   542  0091  2892               	nop2	;2 cycle nop
   543  0092  2893               	nop2	;2 cycle nop
   544                           
   545                           ;main.c: 46:         } else {
   546  0093  289E               	goto	i1l33
   547  0094                     i1l34:	
   548                           
   549                           ;main.c: 47:             GPIO0 = 1;
   550  0094  1405               	bsf	5,0	;volatile
   551                           
   552                           ;main.c: 48:             GPIO5 = 0;
   553  0095  1285               	bcf	5,5	;volatile
   554                           
   555                           ;main.c: 49:             GPIO4 = 0;
   556  0096  1205               	bcf	5,4	;volatile
   557                           
   558                           ;main.c: 50:             _delay((unsigned long)((1)*(16000000/4000000.0)));
   559  0097  2898               	nop2	;2 cycle nop
   560  0098  2899               	nop2	;2 cycle nop
   561                           
   562                           ;main.c: 51:             GPIO4 = 1;
   563  0099  1283               	bcf	3,5	;RP0=0, select bank0
   564  009A  1605               	bsf	5,4	;volatile
   565                           
   566                           ;main.c: 52:             GPIO5 = 1;
   567  009B  1685               	bsf	5,5	;volatile
   568                           
   569                           ;main.c: 53:             _delay((unsigned long)((1)*(16000000/4000000.0)));
   570  009C  289D               	nop2	;2 cycle nop
   571  009D  289E               	nop2	;2 cycle nop
   572  009E                     i1l33:	
   573                           ;main.c: 55:     }
   574                           
   575                           
   576                           ;main.c: 57:     GPIF = 0;
   577  009E  100B               	bcf	11,0	;volatile
   578  009F                     L1:	
   579  009F  1283               	bcf	3,5	;RP0=0, select bank0
   580  00A0  0822               	movf	??_isr+2,w
   581  00A1  008A               	movwf	10
   582  00A2  0E21               	swapf	(??_isr+1)^0,w
   583  00A3  0083               	movwf	3
   584  00A4  0EDE               	swapf	94,f
   585  00A5  0E5E               	swapf	94,w
   586  00A6  0009               	retfie
   587  00A7                     __end_of_isr:	
   588  005E                     btemp	set	94	;btemp
   589  005E                     wtemp0	set	94
   590                           
   591                           	psect	intentry
   592  0004                     __pintentry:	
   593                           ;incstack = 0
   594                           ; Regs used in _isr: [wreg]
   595                           
   596  0004                     interrupt_function:	
   597  005E                     saved_w	set	btemp
   598  0004  00DE               	movwf	btemp
   599  0005  0E03               	swapf	3,w
   600  0006  1283               	bcf	3,5	;RP0=0, select bank0
   601  0007  00A1               	movwf	??_isr+1
   602  0008  080A               	movf	10,w
   603  0009  00A2               	movwf	??_isr+2
   604  000A  2879               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     11      11

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calibrate

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      92
                                              9 BANK0      2     2      0
                          _calibrate
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            6     6      0      92
                                              3 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      B       B       4       17.7%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 31 00:30:37 2019

            __CFG_CP$OFF 0000                       l41 004E                       l39 0020  
                     l48 00BF                       u75 0048                       u85 0076  
                    _GIE 005F                      u137 00B5                      u147 0014  
                    u157 0027                      u167 0033                      u177 0055  
           __CFG_CPD$OFF 0000                      u187 0061                      _isr 0079  
                   ?_isr 0020                     _IOC2 04B2                     _GPIE 005B  
                   _GPIF 0058                     i1l33 009E                     i1l34 0094  
                   _main 00A7                     btemp 005E            __CFG_BOREN$ON 0000  
                   start 000B                    ??_isr 0020                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    _CMCON 0019                    _ANSEL 009F  
                  _GPIO0 0028                    _GPIO1 0029                    _GPIO2 002A  
                  _GPIO4 002C                    _GPIO5 002D                    u10_20 007F  
                  u10_22 0080                    u11_20 0085                    u11_22 0086  
                  pclath 000A                    status 0003                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 000C             __end_of_main 00C0  
          calibrate@i_48 0027                   ??_main 0029                   _ADCON0 001F  
                 _TRISIO 0085           __CFG_PWRTE$OFF 0000                   saved_w 005E  
__end_of__initialization 000C       __size_of_calibrate 006B               __pmaintext 00A7  
             __pintentry 0004        __end_of_calibrate 0079               calibrate@i 0025  
                __ptext1 000E                  __ptext2 0079             __size_of_isr 002E  
   end_of_initialization 000C      start_initialization 000C              __end_of_isr 00A7  
              ___latbits 0000            __pcstackBANK0 0020                _calibrate 000E  
      interrupt_function 0004               ?_calibrate 0020              ??_calibrate 0023  
          __size_of_main 0019                 intlevel1 0000        __CFG_FOSC$INTRCIO 0000  
